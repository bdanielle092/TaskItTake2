[{"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\index.js":"1","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\reportWebVitals.js":"2","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\App.js":"3","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\ApplicationViews.js":"4","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\providers\\UserProfileProvider.js":"5","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Header.js":"6","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\pages\\Login.js":"7","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\pages\\Register.js":"8","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Home.js":"9","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardForm.js":"10","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardList.js":"11","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\providers\\BoardProvider.js":"12","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\Board.js":"13","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardEditForm.js":"14","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\Task.js":"15","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\TaskList.js":"16","C:\\Users\\faith\\workspace-43\\capstone\\TaskItTake2\\TaskIt2\\TaskIt\\client\\src\\index.js":"17","C:\\Users\\faith\\workspace-43\\capstone\\TaskItTake2\\TaskIt2\\TaskIt\\client\\src\\App.js":"18","C:\\Users\\faith\\workspace-43\\capstone\\TaskItTake2\\TaskIt2\\TaskIt\\client\\src\\reportWebVitals.js":"19","C:\\Users\\faith\\workspace-43\\capstone\\TaskItTake2\\TaskIt2\\TaskIt\\client\\src\\components\\ApplicationViews.js":"20","C:\\Users\\faith\\workspace-43\\capstone\\TaskItTake2\\TaskIt2\\TaskIt\\client\\src\\components\\Header.js":"21","C:\\Users\\faith\\workspace-43\\capstone\\TaskItTake2\\TaskIt2\\TaskIt\\client\\src\\providers\\UserProfileProvider.js":"22","C:\\Users\\faith\\workspace-43\\capstone\\TaskItTake2\\TaskIt2\\TaskIt\\client\\src\\components\\Home.js":"23","C:\\Users\\faith\\workspace-43\\capstone\\TaskItTake2\\TaskIt2\\TaskIt\\client\\src\\pages\\Register.js":"24","C:\\Users\\faith\\workspace-43\\capstone\\TaskItTake2\\TaskIt2\\TaskIt\\client\\src\\components\\Board\\BoardForm.js":"25","C:\\Users\\faith\\workspace-43\\capstone\\TaskItTake2\\TaskIt2\\TaskIt\\client\\src\\pages\\Login.js":"26","C:\\Users\\faith\\workspace-43\\capstone\\TaskItTake2\\TaskIt2\\TaskIt\\client\\src\\components\\Board\\Board.js":"27","C:\\Users\\faith\\workspace-43\\capstone\\TaskItTake2\\TaskIt2\\TaskIt\\client\\src\\components\\Board\\BoardEditForm.js":"28","C:\\Users\\faith\\workspace-43\\capstone\\TaskItTake2\\TaskIt2\\TaskIt\\client\\src\\components\\Board\\BoardList.js":"29","C:\\Users\\faith\\workspace-43\\capstone\\TaskItTake2\\TaskIt2\\TaskIt\\client\\src\\providers\\BoardProvider.js":"30"},{"size":716,"mtime":1612459642743,"results":"31","hashOfConfig":"32"},{"size":362,"mtime":499162500000,"results":"33","hashOfConfig":"32"},{"size":524,"mtime":1612459642636,"results":"34","hashOfConfig":"32"},{"size":1366,"mtime":1612640811225,"results":"35","hashOfConfig":"32"},{"size":3594,"mtime":1612493046878,"results":"36","hashOfConfig":"32"},{"size":1900,"mtime":1612641884384,"results":"37","hashOfConfig":"32"},{"size":2536,"mtime":1612552188485,"results":"38","hashOfConfig":"32"},{"size":3800,"mtime":1612459642757,"results":"39","hashOfConfig":"32"},{"size":1347,"mtime":1612641821077,"results":"40","hashOfConfig":"32"},{"size":2346,"mtime":1612641722839,"results":"41","hashOfConfig":"32"},{"size":504,"mtime":1612641518624,"results":"42","hashOfConfig":"32"},{"size":1626,"mtime":1612488173193,"results":"43","hashOfConfig":"32"},{"size":1819,"mtime":1612641494402,"results":"44","hashOfConfig":"32"},{"size":3817,"mtime":1612584178532,"results":"45","hashOfConfig":"32"},{"size":0,"mtime":1612640393600,"results":"46","hashOfConfig":"32"},{"size":0,"mtime":1612640388411,"results":"47","hashOfConfig":"32"},{"size":716,"mtime":1614054047509,"results":"48","hashOfConfig":"49"},{"size":641,"mtime":1614097140050,"results":"50","hashOfConfig":"49"},{"size":375,"mtime":1614054047525,"results":"51","hashOfConfig":"49"},{"size":1366,"mtime":1614097497227,"results":"52","hashOfConfig":"49"},{"size":1900,"mtime":1614054047485,"results":"53","hashOfConfig":"49"},{"size":3594,"mtime":1614054047523,"results":"54","hashOfConfig":"49"},{"size":1347,"mtime":1614054047490,"results":"55","hashOfConfig":"49"},{"size":3800,"mtime":1614054047518,"results":"56","hashOfConfig":"49"},{"size":2802,"mtime":1614100037286,"results":"57","hashOfConfig":"49"},{"size":2536,"mtime":1614054047516,"results":"58","hashOfConfig":"49"},{"size":1360,"mtime":1614097604369,"results":"59","hashOfConfig":"49"},{"size":3817,"mtime":1614054047478,"results":"60","hashOfConfig":"49"},{"size":504,"mtime":1614054047481,"results":"61","hashOfConfig":"49"},{"size":2870,"mtime":1614096898047,"results":"62","hashOfConfig":"49"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"v3c2y3",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"65"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"lqyc2e",{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"100"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"100"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"100"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"100"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\index.js",[],["131","132"],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\reportWebVitals.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\App.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\ApplicationViews.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\providers\\UserProfileProvider.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Header.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\pages\\Login.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\pages\\Register.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Home.js",["133"],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardForm.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardList.js",["134"],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\providers\\BoardProvider.js",[],["135","136"],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\Board.js",["137"],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardEditForm.js",["138"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { UserProfileContext } from \"../../providers/UserProfileProvider\";\r\nimport {\r\n    Form,\r\n    FormGroup,\r\n    Card,\r\n    CardBody,\r\n    Label,\r\n    Input,\r\n    Button,\r\n} from \"reactstrap\";\r\n\r\n\r\n\r\nconst BoardEditForm = () => {\r\n    const { getToken } = useContext(UserProfileContext)\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n    //this is a empty string but when the page initially gets loaded then the string will be updated with the current name of the board\r\n    const [boardToEdit, setBoardToEdit] = useState(\"\")\r\n    //this the existing board object that is gets loads ar initial load too.\r\n    const [existingBoard, setExistingBoard] = useState({})\r\n\r\n    //this is getting the current state of the board base off the id passed in the uri and setting existingBoard and boardToEdit\r\n    useEffect(() => {\r\n        getToken()\r\n            .then((token) =>\r\n                fetch(`/api/board/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                })\r\n            )\r\n            .then((res) => res.json())\r\n            .then((board) => {\r\n                setExistingBoard(board)\r\n                setBoardToEdit(board[\"name\"])\r\n            });\r\n\r\n    }, []);\r\n\r\n    //updating boardToEdit value. Updates boardToEdit value on every key stroke for the input field\r\n    const handleSubmit = (evt) => {\r\n        const newBoard = evt.target.value;\r\n        setBoardToEdit(newBoard);\r\n    };\r\n\r\n    // update function to update the database with the new state of the board name\r\n    const updateBoard = (board) => {\r\n        getToken()\r\n            .then((token) =>\r\n                fetch(`/api/board/${id}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        //keeping all the existing keys the same except name\r\n                        \"active\": existingBoard[\"active\"],\r\n                        \"id\": existingBoard[\"id\"],\r\n                        \"name\": boardToEdit,\r\n                        \"userProfile\": existingBoard[\"userProfile\"],\r\n                        \"userProfileId\": existingBoard[\"userProfileId\"]\r\n                    }),\r\n                })\r\n            )\r\n            .then((evt) => history.push(\"/\"));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardBody>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Label for=\"name\">Board Name</Label>\r\n                            <Input\r\n                                id=\"name\"\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                value={boardToEdit}\r\n                                onChange={(evt) => {\r\n                                    evt.preventDefault()\r\n                                    handleSubmit(evt)\r\n                                }}\r\n                            />\r\n                        </FormGroup>\r\n                    </Form>\r\n                    <Button\r\n\r\n                        color=\"warning \"\r\n                        onClick={(evt) => {\r\n                            evt.preventDefault();\r\n                            updateBoard(boardToEdit);\r\n                        }}\r\n                    >\r\n                        SUBMIT\r\n                    </Button>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\nexport default BoardEditForm;","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\Task.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\TaskList.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskItTake2\\TaskIt2\\TaskIt\\client\\src\\index.js",[],["139","140"],"C:\\Users\\faith\\workspace-43\\capstone\\TaskItTake2\\TaskIt2\\TaskIt\\client\\src\\App.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskItTake2\\TaskIt2\\TaskIt\\client\\src\\reportWebVitals.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskItTake2\\TaskIt2\\TaskIt\\client\\src\\components\\ApplicationViews.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskItTake2\\TaskIt2\\TaskIt\\client\\src\\components\\Header.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskItTake2\\TaskIt2\\TaskIt\\client\\src\\providers\\UserProfileProvider.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskItTake2\\TaskIt2\\TaskIt\\client\\src\\components\\Home.js",["141"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport BoardList from \"./Board/BoardList\";\r\nimport { Col } from \"reactstrap\"\r\nimport \"./Home.css\";\r\n\r\n\r\n\r\nconst Home = () => {\r\n    const user = JSON.parse(localStorage.getItem(\"userProfile\"));\r\n    const { getToken } = useContext(UserProfileContext);\r\n    const [boards, setBoards] = useState([])\r\n\r\n\r\n    //getting the all the boards for this user\r\n    useEffect(() => {\r\n        getToken()\r\n            .then((token) =>\r\n                fetch(`/api/board`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                })\r\n            )\r\n            .then((res) => res.json())\r\n            .then((boards) =>\r\n\r\n                setBoards(boards));\r\n\r\n    }, []);\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div>\r\n\r\n                <h1 className=\"home\">Welcome {user.name.split(\" \")[0]}!</h1>\r\n                <p className=\"home2\">Click on a  <strong className=\"tag\">Board</strong> to view tasks</p>\r\n                <Col className=\"listOfBoards\">\r\n                    <BoardList boards={boards} />\r\n                </Col>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default Home\r\n\r\n","C:\\Users\\faith\\workspace-43\\capstone\\TaskItTake2\\TaskIt2\\TaskIt\\client\\src\\pages\\Register.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskItTake2\\TaskIt2\\TaskIt\\client\\src\\components\\Board\\BoardForm.js",["142","143","144"],"\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    Form,\r\n    FormGroup,\r\n    Card,\r\n    CardBody,\r\n    Label,\r\n    Input,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport { UserProfileContext } from \"../../providers/UserProfileProvider\";\r\nimport { BoardContext } from \"../../providers/BoardProvider\";\r\n\r\n\r\nconst BoardForm = () => {\r\n\r\n    const { getToken } = useContext(UserProfileContext);\r\n    const { addBoard, getAllBoards } = useContext(BoardContext);\r\n    const history = useHistory();\r\n    const [board, setBoard] = useState({ name: \"\" });\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    //this is updating the board and setting it as the new board \r\n    const handleSubmit = (evt) => {\r\n        /* When changing a state object or array,\r\n   always create a copy, make changes, and then set state.*/\r\n        const newBoard = { ...board };\r\n        /* Animal is an object with properties.\r\n     Set the property to the new value\r\n     using object bracket notation. */\r\n        newBoard[evt.target.id] = evt.target.value;\r\n        //update state\r\n        setBoard(newBoard);\r\n    };\r\n\r\n    //this is creating the new board in the database then taking us back to home \r\n    const createNewBoard = (evt) => {\r\n        evt.preventDefault();\r\n        if (board.name === \"\") {\r\n            alert(\"Please enter a Board Name\")\r\n        } else {\r\n            setIsLoading(true)\r\n        }\r\n        //invoke addAnimal passing animal as an argument.\r\n        //once complete, change the url and display the animal list\r\n        addBoard(board)\r\n            .then(() => history.push(`/`));\r\n    };\r\n\r\n    useEffect(() => {\r\n        getAllBoards();\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardBody>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Label for=\"name\">Board Name</Label>\r\n                            <Input\r\n                                id=\"name\"\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                placeholder=\"Enter new board name\"\r\n                                onChange={(evt) => handleSubmit(evt)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Form>\r\n                    <Button\r\n\r\n                        color=\"warning \"\r\n                        onClick={(evt) => {\r\n                            evt.preventDefault();\r\n                            createNewBoard(board);\r\n                        }}\r\n                    >\r\n                        SUBMIT\r\n                    </Button>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\nexport default BoardForm\r\n","C:\\Users\\faith\\workspace-43\\capstone\\TaskItTake2\\TaskIt2\\TaskIt\\client\\src\\pages\\Login.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskItTake2\\TaskIt2\\TaskIt\\client\\src\\components\\Board\\Board.js",["145","146","147","148"],"import { useEffect, useState, useContext } from \"react\";\r\nimport { UserProfileContext } from \"../../providers/UserProfileProvider\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { DropdownItem, DropdownMenu, DropdownToggle, UncontrolledDropdown, Col } from 'reactstrap';\r\nimport \"./Board.css\";\r\n\r\n\r\n\r\n\r\nconst Board = (props) => {\r\n    const { getToken } = useContext(UserProfileContext);\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n    //setting the state of board and then updating the state of board\r\n    const [board, setBoard] = useState([]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    //taking user to the edit form   \r\n    const goToBoardEditForm = () => {\r\n        history.push(`/BoardEditForm/${id}`);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h3 className=\"BoardName\">{board.name} Board</h3>\r\n\r\n            <UncontrolledDropdown>\r\n                <DropdownToggle caret>\r\n                    Actions\r\n                </DropdownToggle>\r\n                <DropdownMenu>\r\n                    <DropdownItem onClick={goToBoardEditForm}>Edit {board.name} Board</DropdownItem>\r\n                    <DropdownItem divider />\r\n                    <DropdownItem>Delete {board.name} Board</DropdownItem>\r\n                </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Board","C:\\Users\\faith\\workspace-43\\capstone\\TaskItTake2\\TaskIt2\\TaskIt\\client\\src\\components\\Board\\BoardEditForm.js",["149"],"C:\\Users\\faith\\workspace-43\\capstone\\TaskItTake2\\TaskIt2\\TaskIt\\client\\src\\components\\Board\\BoardList.js",["150"],"import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst BoardList = ({ boards }) => {\r\n\r\n    //mapping through the list of boards\r\n    return (\r\n        <div>\r\n            {boards.map((board) => (\r\n                <div key={board.id} >\r\n                    <Link to={`/board/${board.id}`}>\r\n                        <strong>{board.name}</strong>\r\n                    </Link>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\nexport default BoardList ","C:\\Users\\faith\\workspace-43\\capstone\\TaskItTake2\\TaskIt2\\TaskIt\\client\\src\\providers\\BoardProvider.js",[],{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":31,"column":8,"nodeType":"157","endLine":31,"endColumn":10,"suggestions":"158"},{"ruleId":"159","severity":1,"message":"160","line":1,"column":17,"nodeType":"161","messageId":"162","endLine":1,"endColumn":26},{"ruleId":"151","replacedBy":"163"},{"ruleId":"153","replacedBy":"164"},{"ruleId":"159","severity":1,"message":"165","line":4,"column":76,"nodeType":"161","messageId":"162","endLine":4,"endColumn":79},{"ruleId":"155","severity":1,"message":"166","line":42,"column":8,"nodeType":"157","endLine":42,"endColumn":10,"suggestions":"167"},{"ruleId":"151","replacedBy":"168"},{"ruleId":"153","replacedBy":"169"},{"ruleId":"155","severity":1,"message":"156","line":31,"column":8,"nodeType":"157","endLine":31,"endColumn":10,"suggestions":"170"},{"ruleId":"159","severity":1,"message":"171","line":19,"column":13,"nodeType":"161","messageId":"162","endLine":19,"endColumn":21},{"ruleId":"159","severity":1,"message":"172","line":23,"column":12,"nodeType":"161","messageId":"162","endLine":23,"endColumn":21},{"ruleId":"155","severity":1,"message":"173","line":54,"column":8,"nodeType":"157","endLine":54,"endColumn":10,"suggestions":"174"},{"ruleId":"159","severity":1,"message":"160","line":1,"column":10,"nodeType":"161","messageId":"162","endLine":1,"endColumn":19},{"ruleId":"159","severity":1,"message":"165","line":4,"column":76,"nodeType":"161","messageId":"162","endLine":4,"endColumn":79},{"ruleId":"159","severity":1,"message":"171","line":11,"column":13,"nodeType":"161","messageId":"162","endLine":11,"endColumn":21},{"ruleId":"159","severity":1,"message":"175","line":15,"column":19,"nodeType":"161","messageId":"162","endLine":15,"endColumn":27},{"ruleId":"155","severity":1,"message":"166","line":42,"column":8,"nodeType":"157","endLine":42,"endColumn":10,"suggestions":"176"},{"ruleId":"159","severity":1,"message":"160","line":1,"column":17,"nodeType":"161","messageId":"162","endLine":1,"endColumn":26},"no-native-reassign",["177"],"no-negated-in-lhs",["178"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getToken'. Either include it or remove the dependency array.","ArrayExpression",["179"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar",["177"],["178"],"'Col' is defined but never used.","React Hook useEffect has missing dependencies: 'getToken' and 'id'. Either include them or remove the dependency array.",["180"],["177"],["178"],["181"],"'getToken' is assigned a value but never used.","'isLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAllBoards'. Either include it or remove the dependency array.",["182"],"'setBoard' is assigned a value but never used.",["183"],"no-global-assign","no-unsafe-negation",{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},{"desc":"184","fix":"188"},{"desc":"189","fix":"190"},{"desc":"186","fix":"191"},"Update the dependencies array to be: [getToken]",{"range":"192","text":"193"},"Update the dependencies array to be: [getToken, id]",{"range":"194","text":"195"},{"range":"196","text":"193"},"Update the dependencies array to be: [getAllBoards]",{"range":"197","text":"198"},{"range":"199","text":"195"},[905,907],"[getToken]",[1436,1438],"[getToken, id]",[905,907],[1741,1743],"[getAllBoards]",[1436,1438]]